# ESER: E-series for electrical components
#
# Program prints out E-series values. Input for E-series (3, 6, 12, 24,...) must
# be entered into X stack before [EXEQ]. Results are shown in 2 line alpha
# strings as a group of 6 values. Press [UP] or [DOWN] to scroll through the
# results, or [EXIT] to end the program.
# Requires programs "STOD", "RCLD", "STOST" and "RCLST".
# For calculation of E series see Wikipedia article:
# https://en.wikipedia.org/wiki/E_series_of_preferred_numbers
#
# Michael Grubmüller, michael.grubmueller@gmail.com
# 2021-03-11: Initial version

00 { 323-Byte Prgm }
01 LBL "ESER"

02 STO 00 @ E series input from X stack
03 XEQ "STOST" @ Save stack content
04 XEQ "STOD" @ Save display setting
05 RCL 00
06 1
07 DIM "ESER" @ E series x 1 solution vector

08 FIX 01 @ 1 digit rounding up to E24
09 24
10 RCL 00
11 X>Y?
12 FIX 02 @ 2 digits rounding from E48 on

# Lopp init
13 RCL 00
14 1
15 -
16 1000
17 ÷
18 0.00001
19 +
20 STO 01 @ Counter from 0 to E series - 1
21 INDEX "ESER"

# Loop body
22 LBL 01

# Standard formula R = 10**(i/E), i = 0...E-1
23 10
24 RCL 01 @ Counter
25 IP
26 RCL 00 @ E series
27 ÷
28 Y↑X
29 RND

# Wrong roundings in E series
30 2.6
31 X<>Y @ Keep calculated value in X stack for further comparison
32 X=Y?
33 2.7 @ Replace calculaed value by corrected value

34 2.9
35 X<>Y
36 X=Y?
37 3.0

38 3.2
39 X<>Y
40 X=Y?
41 3.3

42 3.5
43 X<>Y
44 X=Y?
45 3.6

46 3.8
47 X<>Y
48 X=Y?
49 3.9

50 4.2
51 X<>Y
52 X=Y?
53 4.3

54 4.6
55 X<>Y
56 X=Y?
57 4.7

58 8.3
59 X<>Y
60 X=Y?
61 8.2

62 STOEL @ Save to solution vector
63 I+ @ Increment solution vector row pointer

# Loop control
64 ISG 01
65 GTO 01

# Display result
66 INDEX "ESER"
67 CLMENU
68 KEY 7 XEQ A @ [UP]
69 KEY 8 XEQ B @ [DOWN]
70 KEY 9 GTO e @ [EXIT]
71 MENU
72 LBL 10
73 XEQ C
74 CLST
75 PROMPT
76 GTO 10

77 RTN

# ------------------------------------------------------------------------------
# [UP] Decrement solution pointer
78 LBL A

79 I-
80 I-
81 I-
82 I-
83 I-
84 I-

85 RTN

# ------------------------------------------------------------------------------
# [DOWN] Increment solution pointer
86 LBL B

87 I+
88 I+
89 I+
90 I+
91 I+
92 I+

93 RTN

# ------------------------------------------------------------------------------
# Write result to alpha register
94 LBL C

# Line 1
95 CLA
96 "  "
97 RCLIJ
98 CLX
99 1
100 X=Y?
101 "▶ " @ First element marker
102 RCLEL @ Value 1
103 ARCL ST X
104 I+ @ Value 2
105 RCLEL
106 ⊢" "
107 ARCL ST X
108 I+ @ Value 3
109 RCLEL
110 ⊢" "
111 ARCL ST X

# Line 2
112 ⊢"␊  "
113 I+ @ Value 4
114 RCLEL
115 ARCL ST X
116 I+ @ Value 5
117 RCLEL
118 ⊢" "
119 ARCL ST X
120 I+ @ Value 6
121 RCLEL
122 ⊢" "
123 ARCL ST X

# Set back row pointer
124 I-
125 I-
126 I-
127 I-
128 I-

129 RTN

# ------------------------------------------------------------------------------
# End of program
130 LBL e

131 CLV "ESER"
132 XEQ "RCLD" @ Recall display setting
133 XEQ "RCLST" @ Recall stack content

134 END
