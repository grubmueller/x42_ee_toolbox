@ RFIT: Find two standard resistors to get (close to) a desired non-standard
@ resistance value
@
@ Calculates a list of resistor combinations to get a desired resistance.
@ After starting the program the main menu appears with the following keys:
@ [R?]: Input/change desired resitance (confirm input with [R/S]), initial value
@ is taken from X stack at program start.
@ [E12]: Input/change E series to use (confirm input with [R/S]).
@ [R]: Toggle if single resistor solution should be considered for solution.
@ [R+R]: Toggle if series resistor solution should be considered.
@ [R+R]: Toggle if parallel resistor solution should be considered.
@ [RUN]: Starts calculation
@ After the calculation the program shows the results. You cann scroll through
@ the results with [UP] and [DOWN]. [EXIT] brings you back to the main menu.
@ Requires "LIB" programs of repository.
@
@ Michael Grubmüller, michael.grubmueller@gmail.com
@ 2021-04-05

00 { 902-Byte Prgm }
01 LBL "RFIT"

@ Init and stack input
02 STO "R" @ Take R value from X stack
03 XEQ "STOST" @ Save stack content
04 XEQ "STOD" @ Save display setting
05 12 @ Initialize program with E12
06 STO "E"
07 CLST

@ Menu
08 LBL 00
09 CLMENU
10 "R?"
11 KEY 1 XEQ 01
12 "E"
13 RCL "E"
14 AIP
15 CLX
16 R↓
17 KEY 2 XEQ 02
18 CLA
19 FS? 81
20 "■"
21 ⊢"R"
22 KEY 3 XEQ 03
23 CLA
24 FS? 82
25 "■"
26 ⊢"R+R"
27 KEY 4 XEQ 04
28 CLA
29 FS? 83
30 "■"
31 ⊢"R||R"
32 KEY 5 XEQ 05
33 "RUN"
34 KEY 6 XEQ A
35 KEY 9 GTO e

36 MENU
37 STOP
38 GTO 00

@ Input resistor
39 LBL 01
40 INPUT "R"
41 RTN

@ Input E series
42 LBL 02
43 INPUT "E"
44 RTN

@ Invert flag for single resistor solution
45 LBL 03
46 FS?C 81
47 RTN
48 SF 81
49 RTN

@ Invert flag for series resistor solution
50 LBL 04
51 FS?C 82
52 RTN
53 SF 82
54 RTN

@ Invert flag for
55 LBL 05
56 FS?C 83
57 RTN
58 SF 83
59 RTN

@ ------------------------------------------------------------------------------
@ Main program
60 LBL A

@ Settings
61 1
62 STO 01 @ Initial multiplicator (0.1, 1, 10,... -> Start at 0.1 Ohm,...)
63 6
64 STO 02 @ Number of decades (1, 2, 3,...)
65 10
66 STO 03 @ Number of results

@ Initialise variables
67 0
68 STO 05 @ Circuit, 0:single, 1:series, 2:parallel
69 STO 06 @ R1
70 STO 07 @ R2
71 STO 08 @ R
72 STO 09 @ Rel. error
73 1ᴇ9
74 STO 19 @ Worst rel. error in solution matrix

75 0
76 STO 10 @ Counter 0
77 STO 11 @ Counter 1

@ Create solution matrix
78 RCL 03
79 5
80 DIM "RFIT" @ Result matrix (Circuit, R1, R2, R, rel. error in %)
81 0
82 STO× "RFIT"
83 RCL 19
84 STO+ "RFIT"

@ E series vector
85 RCL "E"
86 1
87 DIM "ESERIES" @ E series x 1 vector
88 INDEX "ESERIES"
89 XEQ B

@ Pool of available resistors
90 RCL "E"
91 RCL 02 @ Number of decades
92 ×
93 1
94 DIM "RPOOL"
95 INDEX "RPOOL"

@ Loop init: Pool of available resistors
96 RCL 02 @ Number of decades
97 1
98 - @ -1, since counter starts at 0
99 1000 @ Shift it to the right place
100 ÷
101 0.00001 @ Increment of 1
102 +
103 STO 10 @ Counter 0

@ Loop body: Pool of available resistors
104 LBL 10

105 RCL 10 @ Counter 0
106 IP
107 RCL "E"
108 ×
109 1
110 +
111 1
112 STOIJ

113 RCL 01 @ Multiplier
114 RCL× "ESERIES"
115 PUTM
116 10
117 STO× 01 @ New multiplier

@ Loop control: Pool of available resistors
118 ISG 10 @ Counter 0
119 GTO 10

@ Loop init: Outer loop for R1
120 RCL "E"
121 RCL 02 @ Number of decades
122 ×
123 1000 @ Shift it to the right place
124 ÷
125 0.00001 @ Increment of 1
126 +
127 1
128 + @ Start with 1
129 STO 10 @ Counter 0

@ Loop body: Outer loop for R1
130 LBL 11

@ - Take R1 out of pool
131 INDEX "RPOOL"
132 RCL 10 @ Counter 0
133 IP
134 1
135 STOIJ
136 RCLEL
137 STO 06 @ R1

@ - Single resistor
138 FC? 81 @ Single resistor solution?
139 GTO 12 @ Skip single resistor solution
140 0
141 STO 05 @ Circuit: single
142 STO 07 @ R2
143 RCL 06 @ R1
144 STO 08 @ R
145 RCL "R"
146 X<>Y
147 %CH
148 STO 09 @ Rel. error
149 ABS
150 RCL 19
151 ABS
152 X>Y? @ Write result to solution matrix
153 XEQ C

@ - Entry point for skipping single resistor solution
154 LBL 12

@ Loop init: Inner loop for R2
155 RCL "E"
156 RCL 02 @ Number of decades
157 ×
158 1000 @ Shift it to the right place
159 ÷
160 0.00001 @ Increment of 1
161 +
162 RCL 10 @ Counter 0
163 IP
164 + @ Start at R2 = R1
165 STO 11 @ Counter 1

@ Loop body: Inner loop for R2
166 LBL 13

@ - Take R2 out of pool
167 INDEX "RPOOL"
168 RCL 11 @ Counter 1
169 IP
170 1
171 STOIJ
172 RCLEL
173 STO 07 @ R2, R1 stays defined by outer loop

@ - Series connection
174 FC? 82 @ Series connection?
175 GTO 14 @ Skip series connection solution
176 1
177 STO 05 @ Circuit: Series
178 RCL 06 @ R1
179 RCL 07 @ R2
180 +
181 STO 08 @ R
182 RCL "R"
183 X<>Y
184 %CH
185 STO 09 @ Rel. error
186 ABS
187 RCL 19
188 ABS
189 X>Y? @ Write result to solution matrix
190 XEQ C
191 LBL 14 @ Skipped series connection

@ - Parallel connection
192 FC? 83 @ Parallel Connection?
193 GTO 15 @ Skip parallel connection solution
194 2
195 STO 05 @ Circuit: Parallel
196 RCL 06 @ R1
197 1/X
198 RCL 07 @ R2
199 1/X
200 +
201 1/X
202 STO 08 @ R
203 RCL "R"
204 X<>Y
205 %CH
206 STO 09 @ Rel. error
207 ABS
208 RCL 19
209 ABS
210 X>Y? @ Write result to solution matrix
211 XEQ C
212 LBL 15 @ Skipped parallel connection

@ Loop control: Inner loop for R2
213 ISG 11 @ Counter 1
214 GTO 13

@ Loop control: Outer loop for R1
215 ISG 10 @ Counter 0
216 GTO 11

@ Show result
217 XEQ D

218 RTN

@ ------------------------------------------------------------------------------
@ Calculation of E series
219 LBL B

220 FIX 01 @ 1 digit rounding up to E24
221 24
222 RCL "E"
223 X>Y?
224 FIX 02 @ 2 digits rounding from E48 on

@ Lopp init
225 RCL "E"
226 1
227 -
228 1000
229 ÷
230 0.00001
231 +
232 STO 10 @ Counter 0 from 0 to E series - 1

@ Loop body
233 LBL 21

@ Standard formula R = 10**(i/E), i = 0...E-1
234 10
235 RCL 10 @ Counter 0
236 IP
237 RCL "E"
238 ÷
239 Y↑X
240 RND

@ Wrong roundings in E series
241 2.6
242 X<>Y @ Keep calculated value in X stack for further comparison
243 X=Y?
244 2.7 @ Replace calculaed value by corrected value

245 2.9
246 X<>Y
247 X=Y?
248 3.0

249 3.2
250 X<>Y
251 X=Y?
252 3.3

253 3.5
254 X<>Y
255 X=Y?
256 3.6

257 3.8
258 X<>Y
259 X=Y?
260 3.9

261 4.2
262 X<>Y
263 X=Y?
264 4.3

265 4.6
266 X<>Y
267 X=Y?
268 4.7

269 8.3
270 X<>Y
271 X=Y?
272 8.2

273 STOEL @ Save to solution vector
274 I+ @ Increment solution vector row pointer

@ Loop control
275 ISG 10 @ Counter 0
276 GTO 21

277 RTN

@ ------------------------------------------------------------------------------
@ Write new result into result matrix
278 LBL C

279 INDEX "RFIT"

@ Replace last line with current result
280 RCL 03 @ Number of results
281 1
282 STOIJ
283 RCL 05 @ Circuit
284 STOEL
285 J+
286 RCL 06 @ R1
287 STOEL
288 J+
289 RCL 07 @ R2
290 STOEL
291 J+
292 RCL 08 @ R
293 STOEL
294 J+
295 RCL 09 @ Rel. error
296 STOEL

@ Get the current result to the right place
297 LBL 30
298 RCLIJ
299 R↓
300 1
301 -
302 X=0? @ Top of result matrix reached?
303 GTO 31 @ End insertion here
304 I- @ Else, compare to line before
305 RCLEL
306 ABS
307 RCL 09
308 ABS
309 X>Y? @ Rel. error of current result larger than in line?
310 GTO 31 @ End insertion here
311 RCLIJ @ Else, swap rows
312 R↓
313 ENTER
314 ENTER
315 1
316 +
317 R<>R
318 GTO 30

@ Result sorted in, save error of new last element to register
319 LBL 31
320 RCL 03 @ Number of results
321 5
322 STOIJ
323 RCLEL
324 STO 19 @ Highest rel. error in result matrix

325 RTN

@ ------------------------------------------------------------------------------
@ Show result
326 LBL D

327 INDEX "RFIT"

328 CLMENU
329 "BACK"
330 KEY 6 GTO 43 @ Same as [EXIT], but looks good on DM42
331 KEY 7 XEQ 41 @ [UP]
332 KEY 8 XEQ 42 @ [DOWN]
333 KEY 9 GTO 43 @ [EXIT]
334 MENU
335 LBL 40
336 XEQ 44
337 CLST
338 PROMPT
339 GTO 40

340 LBL 43
341 RTN

@ ------------------------------------------------------------------------------
@ Show result: [UP] Decrement solution pointer
342 LBL 41
343 I-
344 RCLIJ
345 CLX
346 1
347 STOIJ
348 RTN

@ ------------------------------------------------------------------------------
@ Show result: [DOWN] Increment solution pointer
349 LBL 42
350 I+
351 RCLIJ
352 CLX
353 1
354 STOIJ
355 RTN

@ ------------------------------------------------------------------------------
@ Show result: Write result to alpha register
356 LBL 44

357 CLA

@ Line 1
358 RCLIJ
359 R↓
360 AIP
361 ⊢": "
362 J+ @ 2: R1
363 RCLEL
364 ENG 02
365 ARCL ST X
366 J- @ 1: Circuit
367 RCLEL
368 1
369 X=Y?
370 ⊢" + "
371 CLX
372 2
373 X=Y?
374 ⊢" || "
375 J+ @ 2: R1
376 J+ @ 3: R2
377 RCLEL
378 X≠0?
379 ARCL ST X

@ Line 2
380 ⊢"␊"
381 J+ @ 4: R
382 RCLEL
383 ENG 05
384 ARCL ST X
385 J+ @ 5: Rel. error
386 RCLEL
387 FIX 03
388 ⊢" ("
389 ARCL ST X
390 ⊢"%)"

391 RCLIJ
392 CLX
393 1
394 STOIJ

395 RTN

@ ------------------------------------------------------------------------------
@ End of program
396 LBL e

397 CLV "E"
398 CLV "ESERIES"
399 CLV "RPOOL"
400 CLV "RFIT"

401 EXITALL

402 XEQ "RCLD" @ Recall display setting
403 XEQ "RCLST" @ Recall stack content
404 XEQ "CLTMP" @ Clear temporary variables

405 END
